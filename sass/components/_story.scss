.story {
    width: 75%;
    margin: 0 auto;
    box-shadow: 0 3rem 6rem rgba($color-black, 0.1);
    background-color: rgba($color-white, 0.6);
    border-radius: 3px;
    padding: 6rem;
    padding-left: 9rem;
    font-size: $default-font-size;
    transform: skew(-12deg);

    // It doesn't work on direct child here like before because the Transform property has already been used on the shape element
    // & > * {
    //     transform: skew(12deg);
    // }

    @include respond(tab-port) {
        width: 100%;
        padding: 4rem;
        padding-left: 7rem;
    }

    @include respond(phone) {
        transform: skewX(0);
    }

    &__shape {
        height: 15rem;
        width: 15rem;
        float: left;
        // Rules for using multiple transform value in the same element
        transform: translate(-3rem) skew(12deg);
        position: relative;

        // There was no need for this here, if clip-path property does not support in the browser then overflow hidden will work
        overflow: hidden;

        // @supports means, If clip-path property supports in the browser then the inner block of the code will work, otherwise it will behave as like as before
        @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
            -webkit-clip-path: circle(50% at 50% 50%);
            clip-path: circle(50% at 50% 50%);
            -webkit-shape-outside: circle(50% at 50% 50%);
            shape-outside: circle(50% at 50% 50%);
        }

        @include respond(phone) {
            transform: translate(-3rem) skewX(0);
        }
    }

    &__img {
        height: 100%;
        transform: translate(-4rem) scale(1.4);
        transition: all 0.5s;
    }

    &__text {
        transform: skew(12deg);

        @include respond(phone) {
            transform: skewX(0);
        }
    }

    &__caption {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, 20%);
        color: $color-white;
        text-transform: uppercase;
        font-size: 1.7rem;
        text-align: center;
        opacity: 0;
        transition: all 0.5s;
        backface-visibility: hidden;
    }

    &:hover &__caption {
        opacity: 1;
        transform: translate(-50%, -50%);
    }

    &:hover &__img {
        transform: translate(-4rem) scale(1);
        filter: blur(3px) brightness(80%);
    }
}
